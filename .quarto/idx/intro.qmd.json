{"title":"Manipulação de séries temporais univariadas no software `R`","markdown":{"headingText":"Manipulação de séries temporais univariadas no software `R`","containsRefs":false,"markdown":"\n\n## Definição de séries temporais\n\nConsidere um fenômeno aleatório que é observado ao longo do tempo. A coleção de variáveis aleatórias indexadas no tempo, associadas a este fenômeno, é denominada série temporal. Neste caso, para cada instante de tempo $t$, há uma variável $X(t)$ associada.\n\n```{r figura1, dev = 'png',echo = F, fig.show = 'hide', }\nset.seed(123)\nx <- rnorm(10,1:10,.5)\nplot.new()\nplot.window(ylim=c(-2,12), xlim=c(0,11))\nlines(1:10, x , lwd = 2, type = 'o',pch = 16)\nfor(i in 1:10){\nyy <- x[i]+seq(-2,2,.1)\nn <- length(yy)\nxx <- dnorm(yy,x[i],.5)\npolygon( (1:10)[i]+c(xx,rep(0,n)), c(yy,yy[n:1]))   \n}\naxis(1)\naxis(2)\ntitle(xlab = 'Tempo', ylab='Série temporal')\n\n```\n\n![Figure 1 - Ilustração de uma série temporal](`r knitr::fig_chunk('figura1','png')`)\n\nAlguns autores definem séries temporais simplesmente como valores observados ao longo do tempo.No entanto, essa definição não é útil para nós, uma vez que o tempo não necessariamente possui influência na variável, ou seja, é possível que a distribuição de $X(t)$ não dependa de $t$.\n\n::: {.alert .alert-success}\n<strong>Importante</strong>: estamos interessados apenas em séries temporais nas quais o modelo de probabilidades depende do tempo $t$.\n:::\n\nA partir deste momento, $X(t)$ será escrita como $X_t$ e representará a variável aleatória associada ao tempo $t$ e a versão minúscula $x_t$ representará o valor observado.\n\n## A classe `ts` e a função `window`\n\nNessa seção vamos distutir a classe `ts` do `R`. Ela é particularmente útil para fazer gráficos de séries temporais.  A função `ts` possui vários argumentos importantes:\n\n* `data`: vetor ou matriz da série observada\n\n* `frequency`: esse valor representa o número de observações por período. Vamos discutir essa particularidade em outro momento, mas para a maioria das séries, o período é representado por um ano e o valor de `frequency` está relacionado com quantas observações são necessárias para completar um ano. Por exemplo, se os dados são registrados mensalmente, temos `frequency=12`. Em caso de trimestres, `frequency=4`. O valor padrão é `frequency=1`.\n\n* `deltat`: é o inverso do número de observações por período. Apenas um entre `frequency` e `deltat` deve ser dado.\n\n* `start`: representa o tempo no qual a série começa. Pode ser representado por um único número ou por um vetor de dois números, com o segundo \nrepresentando o momento dentro do período.  Por exemplo:\n\n  * se `frequancy=12` (meses em um ano) então `start=c(1996,2)` implica que a primeira observação data de fevereiro de 1996. \n  \n  * se `frequancy=4` (trimestres em um ano) então `start=c(1996,2)` implica que a primeira observação data do segundo trimestre dede 1996. \n  \n\n* `end`: representa o tempo no qual a série termina. A sintaxe é a mesma do `start`\n\n* `names`: é um vetor com o nomes das séries. É utilizado apenas quando há mais de uma série temporal.\n\n\n<div class='alert alert-info'>\n**Exemplo**\n\nVamos ilustrar a construção de um objeto ts`` utilizando a tabela abaixo, que apresenta o número de nascidos vivos por mês na cidade de Manaus em 2021.\n\n| Mês | No. nascidos vivos |\n|-----------|--------------|\n| Janeiro | 3043 |\n| Fevereiro | 2902 |\n| Março | 3166 |\n| Abril | 3014 |\n| Maio | 3095 |\n| Junho | 2955 |\n| Julho | 3087 |\n| Agosto | 3141 |\n| Setembro | 3129 |\n| Outubro | 3096 |\n| Novembro | 3191 |\n| Dezembro | 3222| \n\n\nVamos guarda a série no vetor `x` e construir o objeto `y` na classe `ts`.\n\n```{r}\nx <- c(\n  3043, 2902, 3166, 3014,\n3095, 2955, 3087, 3141,\n3129, 3096, 3191, 3222\n\n)\ny <- ts( x, start = c(2021,1), frequency = 12)\ny\n```\n\nA função `plot` reconhece um objeto na classe `ts` e constrói um gráfico com o tempo devidamente marcado no eixo as abscissas.\n\n```{r}\nplot(y)\n```\n\nOutros detalhes gráficos da função `plot` podem ser utilizados. \n\n```{r}\nplot(y, ylab = 'No. nascidos vivos', lwd = 2, col = 'seagreen', xlab = 'Ano', main = 'Série mensal de nascidos vivos em Manaus', sub='Fonte: Sistema de Informação sobre Nascidos Vivos/SUS')\n```\n</div>\n\n\nÉ possível extrair os argumentos de um `ts` já criado utilizando funções com os mesmos nomes dos respectivos argumentos. No exemplo acima, criamos o objeto denominado `y`. Abaixo, extraímos os argumentos deste objeto.\n\n```{r}\nstart(y)\nend(y)\nfrequency(y)\ndeltat(y)\n```\n\n\n\nA função `window` é particularmente útil para selecionar um subconjunto da série temporal. Seus argumentos são os mesmos da função `ts`.\n\n\n<div class='alert alert-info'>\n**Exemplo** Utilizando o mesmo conjunto de dados do exemplo anterior, vamos usar a função  `window` para extrair apenas os nascimentos entre junho e agosto.\n\n\n```{r}\nz <- window(y, start=c(2021,6), end = c(2021,8))\nz\n```\n\nAcima, `z` é um novo objeto `ts`. Podemos usar a função `lines` destacar a parte selecionada da série em um gráfico já existente. Abaixo, descatamos os dados selecionados em `z`.\n\n```{r}\nplot(y, ylab = 'No. nascidos vivos', lwd = 2, col = 'seagreen', xlab = 'Ano', main = 'Série \nmensal de nascidos vivos em Manaus', sub='Fonte: Sistema de Informação sobre Nascidos Vivos/SUS')\nlines(z, col ='brown', lwd = 4 )\n```\n</div>\n\n\n<div class='alert alert-warning'>\n<strong>Exercício 1</strong>\n\nA série abaixo representa o número de homicídios mensais no Amazonas, segundo causa básica de óbito, entre os anos 2000 e 2023.\n\n```{r, message=FALSE}\nrequire(gsheet)\nurl = 'https://docs.google.com/spreadsheets/d/1rtiyOZ1W3SRIWZJTR1RyBmxmnGO11x005GNGrgLBr5A/edit?usp=sharing'\n\nhom = gsheet2tbl(url)\n\n```\n\n1. Construa um objeto do tipo `ts`\n\n3. Faça um gráfico da série.\n\n4. Crie um janela para marcar o período entre o início da pandemia de COVID-19 (março de 2020) e o primeiro dia sem mortes por COVID-19 (julho de 2021) \n\n5. Represente a janela acima no gráfico anterior. O que esse gráfico revela?\n\n</div>\n\n\n## A classe `Date` e o pacote `lubridate`\n\nNessa seção discutimos a classe `Date`, responsável por operações com datas no `R`. São apresentadas as principais funções do pacote `base`. Em seguida, apresentamos o pacote `lubridate`, que oferece funções adicionais e uma sintaxe mais fluida.   \n\n\nNo pacote `base`, as datas são objeto da classe `Date`. Abaixo, transformamos o texto que representa 3 de agosto de 1998 nessa classe.\n\n```{r}\n# 3 de agosto de 1998 (formato americano)\nx <- '1998/8/3'\ny <- as.Date(x)\n```\n\nExistem diversas funções que interagem com objetos nessa classe: \n\n* `weekdays`:  Retorna o dia da semana.\n\n* `months`: Retorna o nome do mês.\n\n* `quarters`: Retorna o trimestre do ano (Q1,Q2,Q3 ou Q4).\n\n\nAbaixo, ilustramos o uso dessas funções com a data 3 de agosto de 1998.\n\n```{r}\nweekdays(y)\nmonths(y)\nquarters(y)\n```\n\nOutra vantagem desta classe é a possibilidade de calcular a diferença em dias entre duas datas, utilizando a função `-`. Abaixo mostramos a diferença entre 3 de agosto de 1998 e 3 de agosto de 1999.\n\n```{r}\nz <- as.Date('1999-08-03')\nz-y\n```\nEm certas aplicações, é necessário criar um vetor contendo datas em sequência. A função `seq` interage com objetos da classe `Date`, permitindo que o argumento `by` receba as strings `day`, `week`,`month`, `quarter` e `year`. Abaixo, criamos um vetor mensal que começa em 3 de agosto de 1998 e terminando e 3 de agosto de 1999.\n\n```{r}\ninicio <- as.Date('1998-08-03')\nfim <- as.Date('1999-08-03')\nseq(inicio, fim, by='month')\n```\n\n\nObserve que a conversão da `string` para `Date` é realizada considerando o formato americano por padrão. É possível usar a função `as.Date` para ler qualquer formato, modificando o argumento `format`. No entanto, o pacote `lubridate` oferece funções mais simples para essa conversão:\n\n* `ymd`: Converte `strings` no formato \"ano, mês, dia\", como \"2023-10-26\".\n\n* `mdy`: Converte `strings` no formato \"mês, dia, ano\", como \"10-26-2023\".\n\n* `dmy`: Converte `strings` no formato \"dia, mês, ano\", como \"26-10-2023\".\n\n\nAbaixo, transformamos a data 3/8/1998 para o formato americano.\n\n```{r, message=FALSE}\nrequire(lubridate)\n# 3 de agosto de 1998 (formato nacional)\nx <- '3/8/1998'\ndmy(x)\n```\n\n\nO `lubridate` também ofere a possibilidade de trabalhar com informações de tempo dentro de um dia, como horas, minutos e segundos. Por exemplo, a informação 15h30 de 3 de agosto de 1998 é lida como\n\n```{r}\nx <- '3/8/1998 15:30:00'\ndmy_hms(x)\n```\nO `lubridate` possui as funções `month` e `wday`, que funcionam de modo análgo às funções `months` e `weekdays`. Além disso, o `lubridate` traz uma série de funções adicionais como:\n\n* `year`: retorna o ano de uma data\n* `day`: retornam o dia de uma data (útil para o formado xxx-xx-xx 00:00:00)\n* `hour`, `minute`, `second`: Retornam a hora, minuto e segundo de um objeto de data e tempo.\n\nAs funções de arredondamento de data também são úteis, especialmente para obter contagens mensais, anuais, etc. Elas são `floor_date` e `ceiling_date` e são responsáveis por arredondar uma data para o início ou o fim de um período, respectivamente. Abaixo, arredondamos a data 3 de agosto de 1998 para o começo do mês.\n\n```{r}\nx <- dmy('03/08/1998')\nfloor_date(x, 'month')\n```\n\n<div class='alert alert-info'>\n**Exemplo**\n\nA Força Aérea Brasileira (FAB), por meio do Centro de Investigação e Prevenção de Acidentes Aeronáuticos (CENIPA), possui um `dashboard` para explorar dados sobre incidentes e acidentes aéreos no Brasil. Um acidente é definido como uma ocorrência grave associada à operação de uma aeronave que resulta em lesões ou morte, dano estrutural da aeronave ou aeronave desaparecida. Os demais casos são classificados como incidentes. Os dados, atualizados em 11/08/2025, estão disponíveis para esse curso na `url` abaixo:\n\n\n```{r}\nurl <- 'https://docs.google.com/spreadsheets/d/1BjTXFMmTpcxKdRHCr5IIDJde9yr0s3oAAfyj2vdVuX8/edit?usp=sharing'\n\naereo <-  gsheet2tbl(url)\nhead(aereo)\n```\n\nA unidade amostral é o acidente/indicente. Estamos interessados em criar uma série temporal com o número de acidentes mensais. Abaixo, filtramos apenas os acidentes (coluna `Classificção`) e, em seguida, transformamos as datas em objetos do tipo `Date`.\n\n\n```{r}\nacidentes <- aereo[ aereo$Classificação=='ACIDENTE', ]\ndatas <- dmy(acidentes$Data)\n```\n\nAgora, vamos arredondar todas as datas para o primeiro dia do mês. Em seguida, contaremos as frequências para cada mês/ano\n\n```{r}\nmes_ano <- floor_date(datas, 'month')\ncontagem <- table(mes_ano)\ncontagem\n```\n\nÉ sempre importante checar o resultado em `contagem`, para verificar se não há algum mês ausente. Como não o caso aqui, vamos construir um objeto do tipo `ts` e fazer o gráfico da série temporal.\n\n```{r}\nserie_acidentes <- ts(contagem, start=c(2015,1), frequency = 12 )\nplot(serie_acidentes, ylab = 'No. de acidentes aéreos', xlab = 'Ano', sub= 'Fonte: CENIPA' )\n```\n</div>\n\n\n<div class='alert alert-warning'>\n<strong>Exercício 2</strong>\n\n\nA série abaixo contém as datas dos óbitos maternos no Brasil a partir de 2010.\n\n```{r}\nurl <- 'https://drive.google.com/uc?authuser=0&id=1tYFFT9L2iopKmBDUI3P8qNIRaOnMYj7d&export=download'\n```\n\nCrie uma série temporal com o número de óbitos mensal e faça um gráfico. Crie uma janela para destacar no gráfico o período da pandemia de COVID-19 (março de 2020 até julhode 2021).\n\n</div>\n\n\n\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"intro.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","bibliography":["references.bib"],"theme":"cosmo"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}