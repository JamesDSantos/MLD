{
  "hash": "b4f29163886fcfec64496e533d3e664f",
  "result": {
    "markdown": "# Modelo linear dinâmico polinomial\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(dlm)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: dlm\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'dlm' was built under R version 4.3.1\n```\n:::\n\n```{.r .cell-code}\nmodFim <- function(y,mod){\n\n    ffbs <- dlmGibbsDIG(y, mod = mod, n.sample = 5000,\n                    a.y=1,b.y=100,a.theta=1,b.theta=100,\n                    save.states = FALSE, thin = 0)\n\nv_sim  <- sample(ffbs$dV[-(1:2500)],2500,T)\n\nq <- dim(ffbs$dW)[2]\nw_sim <- NULL\nfor(j in 1:q){\n w_sim <- c(w_sim, mean(sample(ffbs$dW[,j][-(1:2500)],2500,T)))\n}\n# declarando as variâncias na quádrupla\nmod$V <- mean(v_sim)\nmod$W <- diag( w_sim,q)\nreturn(mod)\n}\n```\n:::\n\n\nOs modelos linearas dinâmicos polinomiais possuem uma função de previsão polinomial.\n\nOs podemos mais utilizados na prática são os de ordem 1 e 2, também conhecidos como modelo de nível e de tendência linear, respectivamente.\n\n## O modelo de nível\n\nO modelo de ordem 1, também conhecido como modelo de nível, possui função de previsão da forma\n\n$$f_t(h)=m_t,$$ onde $m_t$ é a média da série para o tempo $t$. Esse tipo de modelo é útil para séries temporais que possuem oscilações na média (ou nível) mas sem exibir uma tendência forte.\n\nConsidere, por exemplo, a série com valores anuais das cheias do Rio Nilo entre 1871 e 1970.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNile <- ts(Nile, start =1900)\nts.plot(Nile, lwd = 2)\n```\n\n::: {.cell-output-display}\n![](polinomial_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\nacf(Nile, lwd = 2)\n```\n\n::: {.cell-output-display}\n![](polinomial_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n:::\n\n\nÉ possível notar que há autocorrelação na série, mas o correlograma não revela uma tendência forte. Abaixo mostramos a tendência estimada via `loess`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntempo <- 1:length(Nile)\nlw <- loess( Nile ~ tempo)\ntend <- ts(lw$fitted, start = start(Nile))\n\nts.plot(Nile)\nlines(tend, lwd = 2, col = 'tomato')\n```\n\n::: {.cell-output-display}\n![](polinomial_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nA tendência estimada via `loess` parece revelar um comportamento inicial de queda e depois meio século de valores oscilando em torno de do nível. Vamos analisar isso utilizando um modelo linear dinâmico para o nível.\n\nPrimeiro, vamos criar um objeto que possui os componentes $F$ e $G$ adequados. Para tanto, basta usar a função `dlmPoly` e escolher a ordem do modelo polinomial.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dlm)\nmod <- dlmModPoly( order = 1)\n```\n:::\n\n\nSe você tiver curiosidade, $F$ e $G$ estão guardados em lista, com os nomes `FF` e `GG`\n\nDentro do objeto `mod` há um componente denomina `m0`. Ele é a estimativa do nível antes de 1. Vamos simplesmente dizer que este é igual ao valor observado em 1900\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod$m0 <- Nile[1]\n```\n:::\n\n\nAgora, vamos estimar as variâncias do modelo, para obter $V$ e $W$:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod <- modFim( Nile, mod)\n```\n:::\n\n\nAgora, vamos aplicar o Teorema de Bayes, através de uma série de atualizações conhecidas como Filtro de Kalman\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltro <- dlmFilter(Nile, mod)\n```\n:::\n\n\nEm modelos lineares dinâmicos, definimos o erro de previsão por\n\n$$y_t-E(y_t|D_{t-1})=y_t-f_t.$$ Se todos os sinais foram bem ajustados, os erros de previsão possuem comportamento com um ruído branco. O valor de $f_t$ está no objeto `filtro`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nerro <- Nile - filtro$f\nts.plot(erro)\n```\n\n::: {.cell-output-display}\n![](polinomial_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\nacf(erro)\n```\n\n::: {.cell-output-display}\n![](polinomial_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n:::\n\n\nAgora, vamos reaplicar o Teorema de Bayes, considerando a amostra toda, para obter a estimativa suavizada do nível.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuave <- dlmSmooth(filtro)\n\nts.plot(Nile)\nlines( suave$s, lwd = 2, col = 'seagreen')\n```\n\n::: {.cell-output-display}\n![](polinomial_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nTambém podemos fazer um intervalo de credibidade para o nível suavizado.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts.plot(Nile)\nlines( suave$s, lwd = 2, col = 'seagreen')\n\n# variâncias da suavização\nvs <- dlmSvd2var(suave$U.S, suave$D.S)\n\n# intervalo de credibilidade\nlines( suave$s - 1.96*sqrt(unlist(vs)) )\nlines( suave$s + 1.96*sqrt(unlist(vs)) )\n```\n\n::: {.cell-output-display}\n![](polinomial_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nPodemos fazer previsões com a função\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprev <- dlmForecast(filtro, 3)\nprev$f\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTime Series:\nStart = 2000 \nEnd = 2002 \nFrequency = 1 \n     Series 1\n[1,] 789.7686\n[2,] 789.7686\n[3,] 789.7686\n```\n:::\n:::\n\n\n## O modelo de tendência\n\nO modelo linear dinâmico polinomial de segunda ordem é um modelo de tendência, uma vez que sua função de previsão é\n\n$$f_t(h)=m_{1,t}+m_{2,t}h.$$\n\nAqui, existem dois estados para cada tempo: $\\theta_{1,t}$ e $\\theta_{2,t}$. No tempo $t$, a média a posteriori dos estados possui a seguinte interpretação:\n\n* $m_{1,t}$: é o nível (média) da série no tempo $t$, estimado com todos os dados disponíveis até o tempo $t$\n\n* $m_{2,t}:$ é a inclinação da tendência da série no tempo $t$, estimado com todos os dados disponíveis até o tempo $t$. Em particular, $m_{2,t}>0$ indica tendência de crescimento, enquanto que $m_{2,t}<0$ indica decrescimento.\n\n\n::: {.cell}\n\n:::\n\n\nVoltemos à série de acidentes aéreos mensais.\n`\n\n::: {.cell}\n\n```{.r .cell-code}\nts.plot(fab_mes, ylab = 'No acidentes/mês')\n```\n\n::: {.cell-output-display}\n![](polinomial_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\nacf(fab_mes, main='')\n```\n\n::: {.cell-output-display}\n![](polinomial_files/figure-html/unnamed-chunk-13-2.png){width=672}\n:::\n:::\n\n\nVamos construir um modelo linear para a tendência:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(dlm)\nmod <- dlmModPoly(2)\n```\n:::\n\n\nEm seguida, precisamos dar uma informação inicial sobre os estados no tempo $0$ (ou seja, a média do nível e da tendência antes da série ser observada). Um bom começo é supor que $m_{1,0}$ é o valor $y_1$ - o primeiro valor observado. Além disso, é usual iniciar a análise supondo que a tendência é nula.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod$m0 <- c(fab_mes[1],0)\n```\n:::\n\n\nAgora, vamos estimar a variâncias do modelo:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod <- modFim(fab_mes, mod)\n```\n:::\n\n\nVamos estimar os parâmetros dos estados via filtro de Kalman.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltro <- dlmFilter(fab_mes, mod)\n```\n:::\n\nVamos analisar os erros de previsão.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nerros <- fab_mes - filtro$f\nts.plot(erros)\n```\n\n::: {.cell-output-display}\n![](polinomial_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n\n```{.r .cell-code}\nacf(erros)\n```\n\n::: {.cell-output-display}\n![](polinomial_files/figure-html/unnamed-chunk-18-2.png){width=672}\n:::\n:::\n\n\nAmbos os gráficos acima mostram um comportamento de ruído branco. \n\nPodemos fazer previsões mais longas com este modelo. Abaixo vamos prever o número de acidentes para os próximos 12 meses.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprevisao12 <- dlmForecast(filtro,12)\nprevisao12$f\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          Jan      Feb      Mar      Apr      May      Jun      Jul      Aug\n2023                                                       51.77063 51.81681\n2024 52.04769 52.09386 52.14004 52.18621 52.23239 52.27857                  \n          Sep      Oct      Nov      Dec\n2023 51.86298 51.90916 51.95533 52.00151\n2024                                    \n```\n:::\n:::\n\n\nVamos colocar essas informações em um gráfico. Vamos começar com as previsões um passo a frente, que são utilizadas para o cálculo do erro de previsão e queforam realizadas dentro do filtro de Kalman - notem que vamos começar as previsões em março, uma vez que as outras foram irreais). Em seguida, vamos apresentar as previsões com um intervalo de 90% de predição (não se usa 95% para previsões porque os intervalos em geral são grandes demais)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts.plot(fab_mes,xlim=c(2013,2025), ylab='No. acidentes mensais', ylim=c(0,75))\nlines( window(filtro$f,start=c(2013,3)), lty=2,lwd = 2)\n\n# medidas para o intervalo de previsão\nmedia_prev <- previsao12$f\nmedia_prev <- ts(media_prev, start = c(2023,7), frequency = 12)\n\ndesv_prev <- sqrt( unlist( previsao12$Q))\ndesv_prev <- ts(desv_prev, start = c(2023,7), frequency = 12)\n\n# intervalo de 90% para as previsões\nlines(media_prev, lwd = 2, col ='blue')\nlines(media_prev -1.64*desv_prev, lwd = 2, col ='blue')\nlines(media_prev+1.64*desv_prev, lwd = 2, col ='blue')\n\n# legenda\nlegend('bottomleft',c('Série observada','Previsão 1 passo à frente', 'Previsão de 12 meses'), lty=c(1,2,1), col =c(1,1,'blue'), bty = 'n')\n```\n\n::: {.cell-output-display}\n![](polinomial_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\nAgora vamos estudar os estados suavizados. `\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuave <- dlmSmooth(filtro)\n```\n:::\n\n\nA obtenção das variâncias é mais delicada. Em cada instante de tempo, é calculada a matriz \n\n$$S_t=\\left( \\begin{array}{cc} s_{11,t} & s_{12,t}\\\\s_{12,t}&s_{22,t}\\end{array}\\right),$$\nque reprenta em sua diagonal a variância dos estados e fora dela a covariância entre eles. Por motivos computacionais, a matriz $S_t$ não é computada diretamente, mas sim duas matrizes $U_t$ e $D_t$ tais que\n\n$$S_t=U_t D_t U_t'$$\nEssa decomposição, conhecida como espectral, possui vantagens numéricas que facilitam o processo de inversão necessário no filtro de Kalman. A função abaixo recupera o desvio padrão a partir de $U_t$ e $D_t$.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsdSmooth <- function(suave){\n  n <- nrow(suave$s)\n  q <- ncol(suave$s)\n  dp <- array(NA_real_, c( n , q))\n  for(i in 1:n){\n    S <- dlmSvd2var(suave$U.S[[i]],suave$D.S[i,])\n    dp[i,] <- sqrt( diag(S))\n  }\n  dp\n}\n```\n:::\n\n\nAbaixo, vamos obter os desvios da suavização\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsd <- sdSmooth(suave)\n```\n:::\n\n\n\nVamos começar a análise com o nível. Observe que, como são 2 estados, devemos selecionar a coluna 1.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnivel_medio <- suave$s[,1]\nsd_nivel <- sd[,1]\n\nts.plot(fab_mes)\nlines(nivel_medio, lwd = 2, col = 'seagreen')\n\n# intervalor de credibilidade (95%) para o nível\nlines(nivel_medio - 1.96*sd_nivel, lwd = 2, col = 'seagreen', lty= 2)\nlines(nivel_medio + 1.96*sd_nivel, lwd = 2, col = 'seagreen', lty=2)\n```\n\n::: {.cell-output-display}\n![](polinomial_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\nPor último, vamos analisar a inclinação da tendência. Como a média da série já foi modelada pelo nível, os gráficos das demais componentes não são colocados sobre a série original. Abaixo mostramos o gráfico da inclinação, com seu respectivo intervalo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntend <- suave$s[,2]\nsd_tend <- sd[,2]\nts.plot(tend, lwd = 2, ylim=c(-1.5,1), ylab='Inclinação da tendência')\nlines(tend-1.96*sd_tend)\nlines(tend+1.96*sd_tend)\nabline(h=0, lty = 2)\n\n# período de mudança da tendência de decrescente para crescente\nabline(v=2016+10/12, lty = 2)\npoints(2016+10/12,0, pch = 15, cex = 1.2)\ntext(2016+11/12,.1,'Oct 16', pos = 2)\n\n# identificando a desaceleração\nx <- window(tend, start=c(2022,7) )\nabline(v=2022+7/12, lty = 2)\npoints(2022+7/12, x[1], pch = 15, cex = 1.2)\ntext(2022+7/12,x[1],'Jul 22', pos = 2)\n```\n\n::: {.cell-output-display}\n![](polinomial_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\nCom o gráfico acima, identificamos muitas características interessantes.\n\n* Note que o zero está presente na maior parte do intervalo. Portanto, podemos apenas afirmar que em certos períodos, a tendência de crescimento/decrescimento foram mais prováveis.\n\n* Em relação à inclinação média,  podemos afirmar que existem evidências de que o padrão de decrescimento estava desacelerando antes de 2016, culminando na inflexão em outubro. Nesse período a série passou a ter uma taxa de crescimento relativamente constante até Julho de 2022, quando começou a desacelar.\n\n## Exercícios\n\n<div class='alert alert-info'>\nAbaixo, mostramos o número de homicídios mensais em Manaus entre Janeiro de 1979 e Dezembro de 2009.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- 'https://www.dropbox.com/s/hcqq6uhgwnimpcn/homicidios_manaus_SIM.csv?dl=1'\n```\n:::\n\n\n* Explore a série.\n\n* Estude o nível da série\n\n* Estude o comportamento da inclinação, identificando possíveis regimes de aceleração/desaceleração de crescimento.\n</div>\n\n<div class='alert alert-info'>\nAnalise a série de suicídios no Mato Grosso do Sul, estudando o nível da série e a inclinação da tendência.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- 'https://drive.google.com/uc?authuser=0&id=1DMSgrQDl0636Lw0Y0MYJHJrgw_2uXntM&export=download'\n```\n:::\n\n</div>\n",
    "supporting": [
      "polinomial_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}