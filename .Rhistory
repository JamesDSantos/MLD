x$APGAR5[is.na(x$APGAR5)== FALSE & x$APGAR5 <4]
x$APGAR5[is.na(x$APGAR5)== FALSE & x$APGAR5 <4]
x$APGAR5[is.na(x$APGAR5)== FALSE ]
table(x$APGAR5[is.na(x$APGAR5)== FALSE ])
x$APGAR5<4
x$APGAR5[is.na(x$APGAR5)== FALSE & as.numeric(x$APGAR5) <4]
x$DTNASC [is.na(x$APGAR5)== FALSE & as.numeric(x$APGAR5) <4]
dmy(x$DTNASC [is.na(x$APGAR5)== FALSE & as.numeric(x$APGAR5) <4])
apgar = dmy(x$DTNASC [is.na(x$APGAR5)== FALSE & as.numeric(x$APGAR5) <4])
contApgar <- table(floor_date(apgar, 'month'))
contApgar
plot(contApgar)
plot(contApgar)
require(foreign)
url = "C:/Users/jam_d/OneDrive/Documentos/TAB415/Nascidos vivos/DNAM2023.dbf"
x = read.dbf(url)
names(x)
plot(AirPassengers)
plot(co2)
?co2
stl(co2)
# p é o período do padrão sazonal
p = 12
plot(stl(co2,p))
plot(decompose(AirPassengers))
plot(stl(AirPassengers,12))
url <- 'https://www.dropbox.com/s/rmgymzsic99qawd/desemprego.csv?dl=1'
banco <- read.csv(url, sep = ';', h = F)
desemprego<- ts( banco$V2, start = c(2002,3), frequency=12)
ts.plot(desemprego, ylab = 'Taxa de desemprego')
url <- 'https://www.dropbox.com/s/rmgymzsic99qawd/desemprego.csv?dl=1'
banco <- read.csv(url, sep = ';', h = F)
desemprego<- ts( banco$V2, start = c(2002,3), frequency=12)
ts.plot(desemprego, ylab = 'Taxa de desemprego')
url <- 'https://www.dropbox.com/s/rmgymzsic99qawd/desemprego.csv?dl=1'
banco <- read.csv(url, sep = ';', h = F)
desemprego<- ts( banco$V2, start = c(2002,3), frequency=12)
ts.plot(desemprego, ylab = 'Taxa de desemprego')
plot(stl(desemprego, 12))
# p é o período do padrão sazonal
p = 12
plot(stl(co2,p))
require(data.table)
dados = fread("C:/Users/jam_d/OneDrive/Documentos/Pesquisa/Cristiane/Pesquisa_2023_Chamadas Públicas_MPF.csv")
dados = read.table("C:/Users/jam_d/OneDrive/Documentos/Pesquisa/Cristiane/Pesquisa_2023_Chamadas Públicas_MPF.csv", h = T, encoding = 'Latin-1')
# 3. Criar o gráfico de barras empilhadas com nomes de municípios na vertical
ggplot(dados_long, aes(x = factor(municipio), y = proporcao, fill = caracteristica)) +
geom_bar(stat = "identity") +
labs(
title = "Percentual pago por grupo de fornecedor",
x = "Município",
y = "Proporção",
fill = "Grupo"
) +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
# Rotacionar o texto do eixo X para a vertical
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
)
require(ggplot2)
# 3. Criar o gráfico de barras empilhadas com nomes de municípios na vertical
ggplot(dados_long, aes(x = factor(municipio), y = proporcao, fill = caracteristica)) +
geom_bar(stat = "identity") +
labs(
title = "Percentual pago por grupo de fornecedor",
x = "Município",
y = "Proporção",
fill = "Grupo"
) +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
# Rotacionar o texto do eixo X para a vertical
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
)
# PERGUNTA 3
# Instalar e carregar pacotes
# install.packages("ggplot2")
# install.packages("tidyr")
library(ggplot2)
library(tidyr)
library(dplyr)
# 1. Criar um dataframe de exemplo com 4 características
set.seed(42)
x=c(0,	0,	0,	100,
0,	0,	0,	100,
3,	0,	0,	97,
0,	0,	0,	100,
0,	0,	0,	100,
0,	0,	0,	60,
0,	0,	0,	100,
0,	0,	0,	13,
0,	0,	0,	100,
0,	0,	0,	100,
0,	50,	0,	0,
0,	42,	0,	58,
0,	31,	8,	44
)
y = matrix(x, ncol=4, byrow=T)
y = y/100
dados_composicionais_4_colunas <- data.frame(
municipio = c(
'Alvarães(1)',
'Barreirinha' ,
'Alvarães(2)',
'Anori',
'Autazes',
'Carauari',
'Lábrea',
'Manaquiri',
'Maraã',
'Novo Aripuanã',
'São Paulo de Olivença',
'Tabatinga',
'Tefé'
),
Cooperativas = y[,1],
Associações = y[,2],
`Grupos informais` = y[,3],
`Agricultores familiares` = y[,4]
)
# 2. Transformar os dados para o formato "long"
# O ggplot2 funciona melhor com dados neste formato
dados_long <- dados_composicionais_4_colunas %>%
pivot_longer(
cols = c(Cooperativas, Associações, `Grupos.informais`,
`Agricultores.familiares`),
names_to = "caracteristica",
values_to = "proporcao"
)
# 3. Criar o gráfico de barras empilhadas com nomes de municípios na vertical
ggplot(dados_long, aes(x = factor(municipio), y = proporcao, fill = caracteristica)) +
geom_bar(stat = "identity") +
labs(
title = "Percentual pago por grupo de fornecedor",
x = "Município",
y = "Proporção",
fill = "Grupo"
) +
scale_y_continuous(labels = scales::percent_format()) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
# Rotacionar o texto do eixo X para a vertical
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
)
# PERGUNTA 1
dados1 <- c(
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'NÃO',
'NÃO',
'NÃO',
'NÃO',
'NÃO',
'NÃO',
'NÃO'
)
dados1 <- data.frame(resposta = dados1)
dados[,1]
# 2. Calcular as frequências e criar um rótulo combinado
frequencias <- dados1 %>%
count(resposta) %>%
mutate(
frequencia_relativa_porcentagem = paste0(round((n / sum(n)) * 100, 1), "%"),
# Criar um rótulo combinado
rotulo = paste0(n, " (", frequencia_relativa_porcentagem, ")")
)
# Exibir a tabela de frequências para verificar o resultado
print(frequencias)
# 3. Criar o gráfico de barras com o rótulo combinado
ggplot(data = frequencias, aes(x = resposta, y = n, fill = resposta)) +
geom_bar(stat = "identity") +
geom_text(
aes(label = rotulo),
vjust = -0.5, # Posição do texto acima da barra
size = 4,
color = "black"
) +
labs(
#title = "Frequência de Respostas 'Sim' e 'Não'",
x = "Resposta",
y = "Frequência Absoluta"
) +
scale_fill_manual(values = c("SIM" = "lightblue", "NÃO" = "salmon")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "none" # Remove a legenda de cor
)
dados1
dados1 <- c(
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'SIM',
'NÃO',
'NÃO',
'NÃO',
'NÃO',
'NÃO',
'NÃO',
'NÃO'
)
dados1 <- data.frame(resposta = dados1)
dados[,1]
# 2. Calcular as frequências e criar um rótulo combinado
frequencias <- dados1 %>%
count(resposta) %>%
mutate(
frequencia_relativa_porcentagem = paste0(round((n / sum(n)) * 100, 1), "%"),
# Criar um rótulo combinado
rotulo = paste0(n, " (", frequencia_relativa_porcentagem, ")")
)
# Exibir a tabela de frequências para verificar o resultado
print(frequencias)
# 3. Criar o gráfico de barras com o rótulo combinado
ggplot(data = frequencias, aes(x = resposta, y = n, fill = resposta)) +
geom_bar(stat = "identity") +
geom_text(
aes(label = rotulo),
vjust = -0.5, # Posição do texto acima da barra
size = 4,
color = "black"
) +
labs(
#title = "Frequência de Respostas 'Sim' e 'Não'",
x = "Resposta",
y = "Frequência Absoluta"
) +
scale_fill_manual(values = c("SIM" = "lightblue", "NÃO" = "salmon")) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "none" # Remove a legenda de cor
)
dados_municipios <- data.frame(
municipio = c(
'Alvarães',
'Barreirinha',
'Coari',
'Anori',
'Autazes',
'Boa Vista Do Ramos',
'Carauari',
'Coari',
'Juruá',
'Jutaí',
'Lábrea',
'Manaquiri',
'Manaus',
'Maraã',
'Novo Airão',
'Novo Aripuanã',
'Parintins',
'Presidente Figueiredo',
'São Gabriel Da Cachoeira',
'São Paulo De Olivença',
'São Sebastião Do Uatumã',
'Tabatinga',
'Tapauá',
'Tefé',
'Uarini'
)
)
# Calcular a frequência absoluta de cada município
frequencia_municipios <- dados_municipios %>%
count(municipio, name = "frequencia_absoluta") %>%
arrange(desc(frequencia_absoluta))
# Baixar os dados geoespaciais dos municípios do Amazonas
# O código do estado do Amazonas é 13
municipios_am <- read_municipality(code_muni = 13, year = 2020)
require(data.table)
dados = fread("C:/Users/jam_d/OneDrive/Documentos/Pesquisa/Cristiane/Pesquisa_2023_Chamadas Públicas_MPF.csv")
dados = read.table("C:/Users/jam_d/OneDrive/Documentos/Pesquisa/Cristiane/Pesquisa_2023_Chamadas Públicas_MPF.csv", h = T, encoding = 'Latin-1')
library(dplyr)
library(ggplot2)
library(geobr)
library(sf)
#==================================
# 0. MUNICIPIOS
dados_municipios <- data.frame(
municipio = c(
'Alvarães',
'Barreirinha',
'Coari',
'Anori',
'Autazes',
'Boa Vista Do Ramos',
'Carauari',
'Coari',
'Juruá',
'Jutaí',
'Lábrea',
'Manaquiri',
'Manaus',
'Maraã',
'Novo Airão',
'Novo Aripuanã',
'Parintins',
'Presidente Figueiredo',
'São Gabriel Da Cachoeira',
'São Paulo De Olivença',
'São Sebastião Do Uatumã',
'Tabatinga',
'Tapauá',
'Tefé',
'Uarini'
)
)
# Calcular a frequência absoluta de cada município
frequencia_municipios <- dados_municipios %>%
count(municipio, name = "frequencia_absoluta") %>%
arrange(desc(frequencia_absoluta))
# Baixar os dados geoespaciais dos municípios do Amazonas
# O código do estado do Amazonas é 13
municipios_am <- read_municipality(code_muni = 13, year = 2020)
# Juntar os dados de frequência com os dados geoespaciais
municipios_mapa <- municipios_am %>%
left_join(frequencia_municipios, by = c("name_muni" = "municipio"))
# Substituir NA's por 0 (para municípios sem frequência nos seus dados)
municipios_mapa$frequencia_absoluta[is.na(municipios_mapa$frequencia_absoluta)] <- 0
# Criar uma nova coluna para o rótulo combinando nome e frequência
municipios_mapa <- municipios_mapa %>%
mutate(rotulo = paste0(name_muni))
# Filtrar para exibir apenas municípios com frequência > 0
municipios_com_frequencia <- municipios_mapa %>%
filter(frequencia_absoluta > 0)
# CRIAR UMA NOVA COLUNA DE CATEGORIA PARA A COR
municipios_mapa <- municipios_mapa %>%
mutate(
categoria_cor = if_else(frequencia_absoluta > 0, "Com Frequência", "Sem Frequência"),
rotulo = paste0(name_muni)
)
# Criar o mapa com os rótulos de nome e frequência
# Criar o mapa SEM cor de preenchimento (fill)
ggplot(data = municipios_mapa) +
geom_sf(aes(fill = categoria_cor), color = "gray30", size = 0.2) +
geom_sf_text(
data = municipios_com_frequencia,
aes(label = rotulo),
color = "black",
size = 2, # Aumentando o tamanho da fonte. Ajuste este valor se necessário.
check_overlap = TRUE
) +
labs(
title = "Municípios que responderam o questionário",
#caption = "Dados baseados na lista fornecida.",
x = NULL, # Remove o nome do eixo x
y = NULL  # Remove o nome do eixo y
) +
scale_fill_manual(
values = c("Com Frequência" = "green3", "Sem Frequência" = "lightgreen"),
name = "Categoria"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "none"
)
# 1. Criar um dataframe com os dados fornecidos
dados <- data.frame(
Categoria = c("Indígenas", "Quilombolas", "Ribeirinhas"),
Receberam = c(242, 4, 310),
Total = c(543, 8, 577)
)
# 2. Calcular a proporção de escolas que receberam os alimentos
dados_proporcao <- dados %>%
mutate(Proporcao = Receberam / Total)
# 3. Criar o gráfico de barras para as proporções
ggplot(dados_proporcao, aes(x = Categoria, y = Proporcao, fill = Categoria)) +
geom_bar(stat = "identity") +
geom_text(
aes(label = paste0(percent(Proporcao, accuracy = 0.1), "\n (Total: ", Total, ")")),
vjust = -0.5, # Ajusta a posição vertical do texto
size = 4,
color = "black"
) +
labs(
title = "Proporção de escolas que receberam alimentos como resultado da chamada pública",
x = "Categoria de Escolas",
y = "Proporção de Escolas",
fill = "Categoria"
) +
scale_y_continuous(labels = percent_format()) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
library(ggplot2)
library(dplyr)
library(scales)
# 1. Criar um dataframe com os dados fornecidos
dados <- data.frame(
Categoria = c("Indígenas", "Quilombolas", "Ribeirinhas"),
Receberam = c(242, 4, 310),
Total = c(543, 8, 577)
)
# 2. Calcular a proporção de escolas que receberam os alimentos
dados_proporcao <- dados %>%
mutate(Proporcao = Receberam / Total)
# 3. Criar o gráfico de barras para as proporções
ggplot(dados_proporcao, aes(x = Categoria, y = Proporcao, fill = Categoria)) +
geom_bar(stat = "identity") +
geom_text(
aes(label = paste0(percent(Proporcao, accuracy = 0.1), "\n (Total: ", Total, ")")),
vjust = -0.5, # Ajusta a posição vertical do texto
size = 4,
color = "black"
) +
labs(
title = "Proporção de escolas que receberam alimentos como resultado da chamada pública",
x = "Categoria de Escolas",
y = "Proporção de Escolas",
fill = "Categoria"
) +
scale_y_continuous(labels = percent_format()) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# 1. Criar um dataframe com os dados fornecidos
dados <- data.frame(
Categoria = c("Indígenas", "Quilombolas", "Ribeirinhas"),
Receberam = c(242, 4, 310),
Total = c(543, 8, 577)
)
# 2. Calcular a proporção de escolas que receberam os alimentos
dados_proporcao <- dados %>%
mutate(Proporcao = Receberam / Total)
# 3. Criar o gráfico de barras para as proporções
ggplot(dados_proporcao, aes(x = Categoria, y = Proporcao, fill = Categoria)) +
geom_bar(stat = "identity") +
geom_text(
aes(label = paste0(percent(Proporcao, accuracy = 0.1), "(Total: ", Total, ")")),
vjust = -0.5, # Ajusta a posição vertical do texto
size = 4,
color = "black"
) +
labs(
title = "Proporção de escolas que receberam alimentos como resultado da chamada pública",
x = "Categoria de Escolas",
y = "Proporção de Escolas",
fill = "Categoria"
) +
scale_y_continuous(labels = percent_format()) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# 1. Criar um dataframe com os dados fornecidos
dados <- data.frame(
Categoria = c("Indígenas", "Quilombolas", "Ribeirinhas"),
Receberam = c(242, 4, 310),
Total = c(543, 8, 577)
)
# 2. Calcular a proporção de escolas que receberam os alimentos
dados_proporcao <- dados %>%
mutate(Proporcao = Receberam / Total)
# 3. Criar o gráfico de barras para as proporções
ggplot(dados_proporcao, aes(x = Categoria, y = Proporcao, fill = Categoria)) +
geom_bar(stat = "identity") +
geom_text(
aes(label = paste0(percent(Proporcao, accuracy = 0.1), " (Total: ", Total, ")")),
vjust = -0.5, # Ajusta a posição vertical do texto
size = 4,
color = "black"
) +
labs(
title = "Proporção de escolas que receberam alimentos como resultado da chamada pública",
x = "Categoria de Escolas",
y = "Proporção de Escolas",
fill = "Categoria"
) +
scale_y_continuous(labels = percent_format()) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
5/7
