Reg  <- cbind(x1,x2,x3)
length(y)
length(x1)
length(x2)
length(x3)
# matriz de regressão
Reg  <- cbind(x1,x2,x3)
#
mod <- dlmModPoly(2)+ dlmModReg(Reg, addInt = F)+dlmModTrig(12,1)
mod$m0[1] <- y[1]
mod <- modFim(y,mod)
filtro <- dlmFilter(y, mod)
erro <- y - filtro$f
ts.plot(erro)
acf(erro)
suave <- dlmSmooth(filtro)
sd <- sdSmooth(suave)
Nível <- suave$s[,1]
Nível
ts.plot( suave$s[,3], ylim=c(-.5,.5))
lines(suave$s[,3] - 1.96*sd[,3], lty=2, col = 'gray')
lines(suave$s[,3] + 1.96*sd[,3], lty=2, col = 'gray')
abline(h=0,lty=2)
ccf(erro, IPCA)
suave <- dlmSmooth(filtro)
sd <- sdSmooth(suave)
ts.plot( suave$s[,3], ylim=c(-.5,.5))
lines(suave$s[,3] - 1.96*sd[,3], lty=2, col = 'gray')
lines(suave$s[,3] + 1.96*sd[,3], lty=2, col = 'gray')
abline(h=0,lty=2)
url <- 'C:/Users/jam_d/Downloads/BOVA11 - IPCA.csv'
dados <- read.csv(url, dec = ',')
dados$IPCA
ts.plot(dados$IPCA)
url <- 'https://drive.google.com/uc?authuser=1E0LrDBepsFOP7UyLqxMFe34nOXiJdyEH&export=download'
dados <- read.csv(url, dec = ',')
url <- 'https://drive.google.com/uc?authuser=1E0LrDBepsFOP7UyLqxMFe34nOXiJdyEH&export=download'
dados <- read.csv(url, dec = ',')
url <- 'https://drive.google.com/uc?authuser=1E0LrDBepsFOP7UyLqxMFe34nOXiJdyEH&export=download'
dados <- read.csv(url, dec = ',')
url <- 'https://drive.google.com/uc?authuser=0&id=1E0LrDBepsFOP7UyLqxMFe34nOXiJdyEH&export=download'
dados <- read.csv(url, dec = ',')
plot(dados$IPCA,dados$Último,  ylab = 'Preço de fechamento')
dados$Data
dados0 <- dados[order(dados$Data),]
dados0
dados$Data <- as.Date(dados$Data, '%d.%m.%Y')
dados$Data
dados[order(dados$Data),]
bova11 <- ts(dados0$Último, frequency=12, start=c(2009,1))
ipca <- ts(dados0$IPCA, frequency=12, start=c(2009,1))
plot.ts( cbind(bova11,ipca), lwd = 2)
plot(ipca,bova11,  ylab = 'Preço de fechamento', xlab = 'IPCA')
dados0$Último
ts.plot(dados0$Último)
dados$Data
dados0 <- dados[order(dados$Data),]
dados0
bova11 <- ts(dados0$Último, frequency=12, start=c(2009,1))
ipca <- ts(dados0$IPCA, frequency=12, start=c(2009,1))
plot.ts( cbind(bova11,ipca), lwd = 2)
plot(ipca,bova11,  ylab = 'Preço de fechamento', xlab = 'IPCA')
ccf( ipca, bova11, main = 'Correlação cruzada', sub = 'cor( IPCA(t+h), BOVA11(t)')
ccf( ipca, bova11, main = 'Correlação cruzada', sub = 'cor( IPCA(t+h), BOVA11(t)', lag = 24)
plot.ts( cbind(bova11,ipca), lwd = 2)
plot(ipca,bova11,  ylab = 'Preço de fechamento', xlab = 'IPCA')
mod <- dlmModReg( ipca)
mod$m0[1] <- bova11[1]
mod <- modFim(bova11, mod)
filtro <- dlmFilter( bova11, mod)
erro <- bova11- filtro$f
ts.plot(erro)
acf(erro)
plot(BOVA11, ylab = 'Preço de fechamento do BOVA11',lwd = 2)
plot(bova11, ylab = 'Preço de fechamento do BOVA11',lwd = 2)
lines(ts(filtro$f,frequency=12,start=c(2013,1)), lwd = 2, col = 'brown')
legend('topleft', c('Série original', 'Série prevista'), bty = 'n', fill = c(1,'tomato'))
ts.plot(erro)
plot(bova11, ylab = 'Preço de fechamento do BOVA11',lwd = 2)
lines(filtro$f, lwd = 2, col = 'brown')
legend('topleft', c('Série original', 'Série prevista'), bty = 'n', fill = c(1,'tomato'))
plot(bova11, ylab = 'Preço de fechamento do BOVA11',lwd = 2)
lines(filtro$f, lwd = 2, col = 'brown')
legend('topleft', c('Série original', 'Série prevista'), bty = 'n', fill = c(1,'tomato'))
suave <- dlmSmooth(filtro)
sd <- sdSmooth(suave)
sd[,1]
sd[,2]
sd[,3]
plot.ts( nível , main = 'Nível suavizado')
nível <- suave$s[,1]
`efeito do IPCA` <- suave$s[,2]
plot.ts( nível , main = 'Nível suavizado')
lines(nível - 1.96*sd[,1], lty = 2)
lines(nível + 1.96*sd[,1], lty = 2)
plot.ts( `efeito do IPCA` , main = 'Coeficiente do IPCA')
lines(`efeito do IPCA` - 1.96*sd[,2], lty = 2)
lines(`efeito do IPCA` + 1.96*sd[,2], lty = 2)
plot.ts( `efeito do IPCA` , main = 'Coeficiente do IPCA', ylim = c(-1,1))
lines(`efeito do IPCA` - 1.96*sd[,2], lty = 2)
lines(`efeito do IPCA` + 1.96*sd[,2], lty = 2)
ts.plot(erro)
suave <- dlmSmooth(filtro)
sd <- sdSmooth(suave)
nível <- suave$s[,1]
`efeito do IPCA` <- suave$s[,2]
plot.ts( nível , main = 'Nível suavizado')
lines(nível - 1.96*sd[,1], lty = 2)
lines(nível + 1.96*sd[,1], lty = 2)
plot.ts( `efeito do IPCA` , main = 'Coeficiente do IPCA', ylim = c(-1,1))
lines(`efeito do IPCA` - 1.96*sd[,2], lty = 2)
lines(`efeito do IPCA` + 1.96*sd[,2], lty = 2)
url <- 'https://drive.google.com/uc?authuser=0&id=1E0LrDBepsFOP7UyLqxMFe34nOXiJdyEH&export=download'
dados <- read.csv(url, dec = ',')
dados$Data <- as.Date(dados$Data, '%d.%m.%Y')
dados0 <- dados[order(dados$Data),]
bova11 <- ts(dados0$Último, frequency=12, start=c(2009,1))
ipca <- ts(dados0$IPCA, frequency=12, start=c(2009,1))
plot.ts( cbind(bova11,ipca), lwd = 2)
plot(ipca,bova11,  ylab = 'Preço de fechamento', xlab = 'IPCA')
url <- 'https://drive.google.com/uc?authuser=0&id=1E0LrDBepsFOP7UyLqxMFe34nOXiJdyEH&export=download'
dados <- read.csv(url, dec = ',')
dados$Data <- as.Date(dados$Data, '%d.%m.%Y')
dados0 <- dados[order(dados$Data),]
bova11 <- ts(dados0$Último, frequency=12, start=c(2009,1))
ipca <- ts(dados0$IPCA, frequency=12, start=c(2009,1))
plot.ts( cbind(bova11,ipca), lwd = 2)
plot(ipca,bova11,  ylab = 'Preço de fechamento', xlab = 'IPCA')
url <- 'https://drive.google.com/uc?authuser=0&id=1E0LrDBepsFOP7UyLqxMFe34nOXiJdyEH&export=download'
dados <- read.csv(url, dec = ',')
dados$Data <- as.Date(dados$Data, '%d.%m.%Y')
dados0 <- dados[order(dados$Data),]
bova11 <- ts(dados0$Último, frequency=12, start=c(2009,1))
ipca <- ts(dados0$IPCA, frequency=12, start=c(2009,1))
plot.ts( cbind(bova11,ipca), lwd = 2)
plot(ipca,bova11,  ylab = 'Preço de fechamento', xlab = 'IPCA')
url <- 'https://drive.google.com/uc?authuser=0&id=1q6DFSbHffVUWVXVUY-1l_b8wrPbXzWuk&export=download'
dados <- read.csv(url, dec = ',')
dados$Data <- as.Date(dados$Data, '%d.%m.%Y')
url <- 'https://drive.google.com/uc?authuser=0&id=1q6DFSbHffVUWVXVUY-1l_b8wrPbXzWuk&export=download'
dados <- read.csv(url, dec = ',')
url <- 'https://drive.google.com/uc?authuser=0&id=1q6DFSbHffVUWVXVUY-1l_b8wrPbXzWuk&export=download'
dados <- read.csv(url, dec = ',')
url <- 'https://drive.google.com/uc?authuser=0&id=1d1dp1q7_Jdp8yOMlcsLxdZZcCMmwjZ04&export=download'
dados <- read.csv(url, dec = ',')
dados$Data <- as.Date(dados$Data, '%d.%m.%Y')
dados0 <- dados[order(dados$Data),]
bova11 <- ts(dados0$Último, frequency=12, start=c(2009,1))
ipca <- ts(dados0$IPCA, frequency=12, start=c(2009,1))
plot.ts( cbind(bova11,ipca), lwd = 2)
dados0$IPCA
dados0$Último
dados <- read.csv(url)
dados$Data <- as.Date(dados$Data, '%d.%m.%Y')
dados0 <- dados[order(dados$Data),]
bova11 <- ts(dados0$Último, frequency=12, start=c(2009,1))
ipca <- ts(dados0$IPCA, frequency=12, start=c(2009,1))
plot.ts( cbind(bova11,ipca), lwd = 2)
dados0$IPCA
dados0$Último
dados0$IPCA
as.numeric(dados0$IPCA)
dados0$IPCA
dados0$IPCA[141]
dados0$IPCA[141] <- 3.1352
bova11 <- ts(dados0$Último, frequency=12, start=c(2009,1))
ipca <- ts(as.numeric(dados0$IPCA), frequency=12, start=c(2009,1))
plot.ts( cbind(bova11,ipca), lwd = 2)
plot(ipca,bova11,  ylab = 'Preço de fechamento', xlab = 'IPCA')
mod <- dlmModReg( ipca - mean(ipca))
mod$m0[1] <- bova11[1]
mod <- modFim(bova11, mod)
filtro <- dlmFilter( bova11, mod)
erro <- bova11- filtro$f
ts.plot(erro)
acf(erro)
plot(bova11, ylab = 'Preço de fechamento do BOVA11',lwd = 2)
lines(filtro$f, lwd = 2, col = 'brown')
legend('topleft', c('Série original', 'Série prevista'), bty = 'n', fill = c(1,'tomato'))
suave <- dlmSmooth(filtro)
sd <- sdSmooth(suave)
nível <- suave$s[,1]
`efeito do IPCA` <- suave$s[,2]
plot.ts( nível , main = 'Nível suavizado')
lines(nível - 1.96*sd[,1], lty = 2)
lines(nível + 1.96*sd[,1], lty = 2)
plot.ts( `efeito do IPCA` , main = 'Coeficiente do IPCA', ylim = c(-1,1))
lines(`efeito do IPCA` - 1.96*sd[,2], lty = 2)
lines(`efeito do IPCA` + 1.96*sd[,2], lty = 2)
sd[,2]
plot.ts( `efeito do IPCA` , main = 'Coeficiente do IPCA', ylim = c(-3,3))
lines(`efeito do IPCA` - 1.96*sd[,2], lty = 2)
lines(`efeito do IPCA` + 1.96*sd[,2], lty = 2)
plot.ts( `efeito do IPCA` , main = 'Coeficiente do IPCA', ylim = c(-3,3))
lines(`efeito do IPCA` - 1.96*sd[,2], lty = 2)
lines(`efeito do IPCA` + 1.96*sd[,2], lty = 2)
plot.ts( `efeito do IPCA` , main = 'Coeficiente do IPCA', ylim = c(-5,3))
lines(`efeito do IPCA` - 1.96*sd[,2], lty = 2)
lines(`efeito do IPCA` + 1.96*sd[,2], lty = 2)
plot.ts( `efeito do IPCA` , main = 'Coeficiente do IPCA', ylim = c(-6,4))
lines(`efeito do IPCA` - 1.96*sd[,2], lty = 2)
lines(`efeito do IPCA` + 1.96*sd[,2], lty = 2)
ccf(ipca,bova11)
ccf(ipca,bova11)
dbova11 <- bova11 - loess( bova11 ~ tempo)$fit
tempo <- 1:length(bova11)
dbova11 <- bova11 - loess( bova11 ~ tempo)$fit
ts.plot(dbova11)
ccf(ipca,dbova11)
dipca <- ipca - loess( ipca ~ tempo)$fit
ccf(dipca,dbova11)
acf( data.frame(dipca,dbova11))
?ccf
acf( data.frame(ipca,bova11))
x <- 1:20
y <- x^2
plot(x,y)
x <- -20:20
y <- x^2
plot(x,y)
cor(x,y)
acf( data.frame(ipca,bova11))
ccf( data.frame(ipca,bova11))
x <- -20:20
y <- x^2
plot(x,y)
cor(x,y)
cov(x,y)
x <- -30:20
y <- x^2
plot(x,y)
cor(x,y)
cov(x,y)
cor(x,y)
x <- -30:20
y <- x^3
plot(x,y)
cor(x,y)
x <- -30:20
y <- x^4
plot(x,y)
cor(x,y)
cov(x,y)
x <- -30:30
y <- x^4
plot(x,y)
cor(x,y)
cov(x,y)
x <- -31:30
y <- x^4
plot(x,y)
cor(x,y)
cov(x,y)
ccf(ipca,bova11)
ts.plot(bova11)
?lag2.plot
lag2.plot(ipca,bova11 )
lag2.plot(ipca,bova11 ,2)
lag2.plot(ipca,bova11 , 12)
?ts
x=ts(1:10,names='dean')
plot(x)
x=ts(cbind(1:10,2:11),names=c('dean','jackson'))
plot(x)
x=ts(1:10,names='dean')
ts.plot(x)
plot.ts(x)
?window
x= ts(1:10,start=c(1996,1), frequency= 12)
y= ts(1:10,start=c(1997,1), frequency= 12)
c(x,y)
z <- window(y, start=c(2021,6), end = c(2021,8))
plot(y)
x <- c(
3043, 2902, 3166, 3014,
3095, 2955, 3087, 3141,
3129, 3096, 3191, 3222
)
y <- ts( x, start = c(2021,1), frequency = 12)
y
plot(y)
plot(y, ylab = 'No. nascidos', lwd = 2, col = 'seagreen', xlab = 'Ano', main = 'Série mensal de nascidos vivos em Manaus', sub='s')
plot(y, ylab = 'No. nascidos', lwd = 2, col = 'seagreen', xlab = 'Ano', main = 'Série mensal de nascidos vivos em Manaus', sub='Fonte: Sistema de Informação sobre Nascidos Vivos/SUS')
z <- window(y, start=c(2021,6), end = c(2021,8))
z
plot(y, ylab = 'No. nascidos vivos', lwd = 2, col = 'seagreen', xlab = 'Ano', main = 'Série
mensal de nascidos vivos em Manaus', sub='Fonte: Sistema de Informação sobre Nascidos Vivos/SUS')
lines(z, col ='brown', lwd = 2 )
plot(y, ylab = 'No. nascidos vivos', lwd = 2, col = 'seagreen', xlab = 'Ano', main = 'Série
mensal de nascidos vivos em Manaus', sub='Fonte: Sistema de Informação sobre Nascidos Vivos/SUS')
lines(z, col ='brown', lwd = 4 )
require(gsheet)
require(gsheet)
url = 'https://docs.google.com/spreadsheets/d/1rtiyOZ1W3SRIWZJTR1RyBmxmnGO11x005GNGrgLBr5A/edit?usp=sharing'
hom = gsheet2tbl(url)
plot(hom)
plot(hom[,1])
hom
hom = ts(hom,start=c(2000,1),frequency=12)
plot(hom)
lines(window(hom, start=c(2020,3), end=c(2021,6)),lwd= 4)
lines(window(hom, start=c(2020,3), end=c(2021,7)),lwd= 4)
# 3 de agosto de 1998 (formato americano)
x <- '1998/8/3'
as.Date(x)
# 3 de agosto de 1998 (formato americano)
x <- '1998/8/3'
weekdays( as.Date(x))
# 3 de agosto de 1998 (formato americano)
x <- '1998/8/3'
months( as.Date(x))
julian(as.Date(x))
julian(as.Date(x),origin='1900-01-01')
julian(as.Date(x),origin=as.Date('1900-01-01'))
# 3 de agosto de 1998 (formato americano)
x <- '1998/8/3'
y <- as.Date(x)
weekdays(y)
months(y)
quarters(y)
z <- as.Data('1999-08-03')
z <- as.Date('1999-08-03')
z-y
?as.Date
require(lubridate)
x
floor_date(x,unit='months')
floor_date(x,unit='month')
x
y
floor_date(y,unit='month')
mdy(x)
ymd(x)
ymd(1998d08d03)
as.Date('1998d08d03',format='%Yd%md%d')
ymd('1998d08d03')
require(lubridate)
# 3 de agosto de 1998 (formato nacional)
x <- '3/8/1998'
dmy(x)
x <- '3/8/1998 15:30:00'
dmy_hms(x)
h(x)
interval(dmy('10102000'),dmy(10102010))
?interval
x <- dmy(03/08/1998)
floor_date(x)
x <- dmy('03/08/1998')
floor_date(x)
x <- dmy('03/08/1998')
floor_date(x, 'month')
url <- 'https://docs.google.com/spreadsheets/d/1BjTXFMmTpcxKdRHCr5IIDJde9yr0s3oAAfyj2vdVuX8/edit?usp=sharing'
aereo <-  gsheet2tbl(url)
names(aereo)
unique(aereo$Classificação)
url <- 'https://docs.google.com/spreadsheets/d/1BjTXFMmTpcxKdRHCr5IIDJde9yr0s3oAAfyj2vdVuX8/edit?usp=sharing'
aereo <-  gsheet2tbl(url)
head(aereo)
acidentes <- aereo[ aereo$Classificação=='ACIDENTE', ]
acidentes <- aereo[ aereo$Classificação=='ACIDENTE', ]
acidentes$Data <- sapply( acidentes$Data, dmy)
seq(dmy('01012000'),dmy(01012002),by='month')
seq(dmy('01012000'),dmy(01012002),by='year')
seq(dmy('01012000'),dmy(01012002),by='week')
seq(dmy('01012000'),dmy(01012002),by='quarter')
inicio <- as.Date('1998-08-93')
inicio <- as.Date('1998-08-03')
fim <- as.Date('1999-08-03')
seq(inicio, fim, by='month')
acidentes <- aereo[ aereo$Classificação=='ACIDENTE', ]
acidentes$Data <- sapply( acidentes$Data, dmy)
mes_ano <- floor(acidentes$Data, 'month')
mes_ano <- floor_date(acidentes$Data, 'month')
mes_ano
mes_ano <- floor_date(acidentes$Data, 'month')
acidentes$Data
acidentes <- aereo[ aereo$Classificação=='ACIDENTE', ]
acidentes$Data <- sapply( acidentes$Data, dmy)
mes_ano <- floor_date(acidentes$Data, 'month')
acidentes$Data
url <- 'https://docs.google.com/spreadsheets/d/1BjTXFMmTpcxKdRHCr5IIDJde9yr0s3oAAfyj2vdVuX8/edit?usp=sharing'
aereo <-  gsheet2tbl(url)
head(aereo)
acidentes <- aereo[ aereo$Classificação=='ACIDENTE', ]
datas <- sapply( acidentes$Data, dmy)
datas
acidentes <- aereo[ aereo$Classificação=='ACIDENTE', ]
datas <- sapply( acidentes$Data, function(x) dmy(x) )
datas
acidentes$Data
sapply( acidentes$Data, function(x) dmy(x) )
acidentes <- aereo[ aereo$Classificação=='ACIDENTE', ]
datas <- dmy(acidentes$Data)
datas
acidentes <- aereo[ aereo$Classificação=='ACIDENTE', ]
datas <- dmy(acidentes$Data)
mes_ano <- floor_date(acidentes$Data, 'month')
floor_date(acidentes$Data, 'month')
mes_ano <- floor_date(datas, 'month')
table(mes_ano)
contagem
contagem <- table(mes_ano)
serie <- ts(contagem, start=c(2015,1), frequency = 12 )
plot(serie, ylab = 'No de acidentes aéreos', xlab = 'Ano', sub= 'Fonte: CENIPA' )
end(serie)
start(y)
end(y)
frequency(y)
deltat(y)
x <- c(
3043, 2902, 3166, 3014,
3095, 2955, 3087, 3141,
3129, 3096, 3191, 3222
)
y <- ts( x, start = c(2021,1), frequency = 12)
y
start(y)
end(y)
frequency(y)
deltat(y)
serie <- ts(contagem, start=c(2015,1), frequency = 12 )
plot(serie, ylab = 'No. de acidentes aéreos', xlab = 'Ano', sub= 'Fonte: CENIPA' )
acf(serie)
TSA::serie
TSA::periodogram(serie)
cycle(serie)
monthplot(serie)
coxcomb(serie)
?coxcomb
??coxcomb
url <- 'https://drive.google.com/uc?authuser=0&id=1tYFFT9L2iopKmBDUI3P8qNIRaOnMYj7d&export=download'
x = read.table(url)
names(x)
x
table(floor_date(x))
table(floor_date(x$V1))
table(floor_date(ymd(x$V1)))
names(table(floor_date(ymd(x$V1))))
table(floor_date(ymd(x$V1)))
ymd(x$V1)
ymd(x$V1[-1])
datas=ymd(x$V1[-1])
datas
datas = ymd(x$V1[-1])
class(datas)
floor_date(datas)
floor_date(datas,'month')
datas2 = floor_date(datas,'month')
table(datas2)
plot(ts(table(datas2)))
z=ts(table(datas2)
z)
z=ts(table(datas2) )
z
plot(z)
plot(ts(z))
z=ts(table(datas2) ,frequency = 12)
z
plot(z)
plot(z[[1]])
plot(z[,1])
z
ts.plot(z)
require(foreign)
x = read.dbf(url)
url = "C:/Users/jam_d/OneDrive/Documentos/TAB415/Nascidos vivos/DNAM2023.dbf"
x = read.dbf(url)
names(x)
x$APGAR5
x$APGAR5[is.na(x$APGAR5)== FALSE]
x$APGAR5[is.na(x$APGAR5)== FALSE & x$APGAR5 <4]
x$APGAR5[is.na(x$APGAR5)== FALSE & x$APGAR5 <4]
x$APGAR5[is.na(x$APGAR5)== FALSE ]
table(x$APGAR5[is.na(x$APGAR5)== FALSE ])
x$APGAR5<4
x$APGAR5[is.na(x$APGAR5)== FALSE & as.numeric(x$APGAR5) <4]
x$DTNASC [is.na(x$APGAR5)== FALSE & as.numeric(x$APGAR5) <4]
dmy(x$DTNASC [is.na(x$APGAR5)== FALSE & as.numeric(x$APGAR5) <4])
apgar = dmy(x$DTNASC [is.na(x$APGAR5)== FALSE & as.numeric(x$APGAR5) <4])
contApgar <- table(floor_date(apgar, 'month'))
contApgar
plot(contApgar)
plot(contApgar)
require(foreign)
url = "C:/Users/jam_d/OneDrive/Documentos/TAB415/Nascidos vivos/DNAM2023.dbf"
x = read.dbf(url)
names(x)
plot(AirPassengers)
plot(co2)
?co2
stl(co2)
# p é o período do padrão sazonal
p = 12
plot(stl(co2,p))
plot(decompose(AirPassengers))
plot(stl(AirPassengers,12))
url <- 'https://www.dropbox.com/s/rmgymzsic99qawd/desemprego.csv?dl=1'
banco <- read.csv(url, sep = ';', h = F)
desemprego<- ts( banco$V2, start = c(2002,3), frequency=12)
ts.plot(desemprego, ylab = 'Taxa de desemprego')
url <- 'https://www.dropbox.com/s/rmgymzsic99qawd/desemprego.csv?dl=1'
banco <- read.csv(url, sep = ';', h = F)
desemprego<- ts( banco$V2, start = c(2002,3), frequency=12)
ts.plot(desemprego, ylab = 'Taxa de desemprego')
url <- 'https://www.dropbox.com/s/rmgymzsic99qawd/desemprego.csv?dl=1'
banco <- read.csv(url, sep = ';', h = F)
desemprego<- ts( banco$V2, start = c(2002,3), frequency=12)
ts.plot(desemprego, ylab = 'Taxa de desemprego')
plot(stl(desemprego, 12))
# p é o período do padrão sazonal
p = 12
plot(stl(co2,p))
