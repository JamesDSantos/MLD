# Introdução

## Definição de séries temporais

Considere um fenômeno aleatório que será observado ao longo do tempo. A coleção de variáveis aleatórias indexadas no tempo associadas a este fenômeno será denominada série temporal. Neste caso, para cada instante de tempo $t$, há uma variável $X(t)$ associada.

```{r figura1, dev = 'png',echo = F, fig.show = 'hide', }
set.seed(123)
x <- rnorm(10,1:10,.5)
plot.new()
plot.window(ylim=c(-2,12), xlim=c(0,11))
lines(1:10, x , lwd = 2, type = 'o',pch = 16)
for(i in 1:10){
yy <- x[i]+seq(-2,2,.1)
n <- length(yy)
xx <- dnorm(yy,x[i],.5)
polygon( (1:10)[i]+c(xx,rep(0,n)), c(yy,yy[n:1]))   
}
axis(1)
axis(2)
title(xlab = 'Tempo', ylab='Série temporal')

```

![Figure 1 - Ilustração de uma série temporal](`r knitr::fig_chunk('figura1','png')`)

Alguns autores definem séries temporais simplesmente como uma os valores de uma variável registrados ao longo do tempo. Essa definição não é útil para nós, uma vez que o tempo não necessariamente possui influência na variável, ou seja, é possível que a distribuição de $X(t)$ não dependa de $t$.

::: {.alert .alert-success}
<strong>Importante</strong>: estamos interessados apenas em séries temporais nas quais o modelo de probabilidades depende do tempo $t$.
:::

A partir deste momento, $X(t)$ será escrita como $X_t$ e representará a variável aleatória associada ao tempo $t$ e a versão minúscula $x_t$ representará o valor observado.

## A classe `ts`

A tabela aabeixo apresenta o número de nascidos vivos por mês na cidade de Manaus em 2021.

| Mês | No. nascidos vivos |
|-----------|--------------|
| Janeiro | 3043 |
| Fevereiro | 2902 |
| Março | 3166 |
| Abril | 3014 |
| Maio | 3095 |
| Junho | 2955 |
| Julho | 3087 |
| Agosto | 3141 |
| Setembro | 3129 |
| Outubro | 3096 |
| Novembro | 3191 |
| Dezembro | 3222| 


Para todos os efeitos, uma série temporal é um vetor numérico. 

```{r}
x <- c(
  3043, 2902, 3166, 3014,
3095, 2955, 3087, 3141,
3129, 3096, 3191, 3222

)

plot(x, type = 'l')
```

Contudo, é útil construir a série temporal como um objeto da classe `ts`. Tal função possui dois argumentos importantes:

* `frequency`: representa o número de observações por unidade de tempo. Por exemplo, se o tempo está sendo registrado em anos, mas o dados são mensais, então `frequency=12`.

* `start`: representa o momento que a série começa. Pode ser representado um único número ou por um vetor de dois números, com o segundo 
representando o momento dentro do período. Por exemplo `start=c(1996,2)` implica que a primeira observação data de fevereiro de 1996. 

```{r}
y <- ts( x, start = c(2021,1), frequency = 12)
y
ts.plot(y)
```

No gráfico acima, a parte decimal no eixo $x$  representa a fração do tempo entre de um ano (começando em 0 e acumulando 1/12 para cada mês subsequente). 

Também podemos customizar o gráfico.

```{r}
plot(y, ylab = 'No. nascidos vivos mensal', lwd = 2, col = 'seagreen')
```

A função `window` seleciona um subconjunto da  série temporal. Abaixo selecionamos apenas os nascimentos entre Junho e Agosto e marcamos estes valores no gráfico.

```{r}
z <- window(y, start=c(2021,6), end = c(2021,8))

plot(y, ylab = 'No. nascidos vivos mensal', lwd = 2, col = 'seagreen')
lines(z, col = 'brown', lwd= 2)

```

<div class='alert alert-warning'>
<strong>Exercício 1</strong>
Considere o total mensal de nascidos vivos na cidade de Manaus entre 2019 e 2020:

| Ano | Mês | No. nascidos vivos |
|-----|-----| -----|
|2019 | 1 | 3.199|
||2|2.963|
||3|3.146|
||4|2.966|
||5|3.074|
||6|2.919|
||7|3.129|
||8|3.230|
||9|3.456|
||10|3.486|
||11|3.220|
||12|3.151|
|2020|1|3.185|
||2|3.131|
||3|3.256|
||4|3.008|
||5|3.080|
||6|2.919|
||7|3.208|
||8|3.126|
||9|3.126|
||10|3.210|
||11|2.957|
||12|3.068|

1. Construa um único vetor com os três anos apresentados

2. A partir do vetor criado, construa um objeto do tipo `ts`

3. Faça um gráfico da série.

4. Crie um janela para ver apenas o ano de 2020.

5. Represente a janela acima no gráfico anterior.

</div>


## O pacote `data.table`

Assim como números e textos possuem classes específicas, as datas no ambiente `R` também possuem sua `Date`.

```{r}
# 3 de agosto de 1998 (formato americano)
x <- '1998/8/3'
as.Date(x)
```

Para que o `R` entenda uma data no formato nacional, é necessário mudar o formato:

```{r}
# 3 de agosto de 1998 (formato nacional)
x <- '3/8/1998'
as.Date(x, format = '%d/%m/%Y')
```
Lidamos com datas quando temos uma fonte de dados bruta, mas em geral nosso objetivo é determinar a quantidade de eventos dentro de dias, semanas, meses ou anos. O pacote `data.table` permite lidar com esse problema de modo rápido. Podemos criar um objeto deste tipo utilizando a função `fread`. A seguir, vamos baixar uma base de dados de acidentes com aeronaves, mantida pela Força Aérea Brasileira e transformar a data de formato nacional para a classe `Date`.

```{r}
library(data.table)
url <- 'https://drive.google.com/uc?authuser=0&id=1iYrnwXgmLK07x8b330aD73scOVruZEuz&export=download'

aereo <-  fread(url, encoding = 'Latin-1')
aereo$ocorrencia_dia <- as.Date(aereo$ocorrencia_dia, '%d/%m/%Y')
```

Um objeto do tipo `data.table` permite uma série de consultas. Em geral, pode-se fazer `aereo[a,b,c]`, onde `a` é uma consulta/função nas linhas, `b` nas colunas e `c` é um agrupador. Uma excelente introdução pode ser vista em [Introduction to data.table](https://cran.r-project.org/web/packages/data.table/vignettes/datatable-intro.html). 

Abaixo, selecionamos apenas a coluna de interesse.

```{r}
fab_dia <- aereo[,'ocorrencia_dia',]
head(fab_dia)
```

 Ao utilizar o operador `.N` em `[,.N,c]`, é retornado o número de linhas que possuem o agrupamento em `c`. Vamos agrupar as datas do nosso banco por ano.
 
```{r} 
fab_ano <- fab_dia[, .N, by=.(year(ocorrencia_dia))]
fab_ano <-fab_ano[ order(year) ]
head(fab_ano)
```

Agora, podemos fazer o gráfico da série

```{r}
fab_ano <- ts( fab_ano, start = 2013)
plot(fab_ano[,2], lwd = 2, ylab = 'No. acidentes/ano', xlab = 'Ano')
```

Também podemos fazer uma série mensal:

```{r} 
fab_mes <- fab_dia[, .N, by=.(year(ocorrencia_dia), month(ocorrencia_dia))]

fab_mes <-fab_mes[ order(year, month ) ]
head(fab_mes)
```

O gráfico dessa nova série é:

```{r}
fab_mes <- ts( fab_mes[,3], start = c(2013, 1), frequency = 12)
plot(fab_mes, lwd = 2, ylab = 'No. acidentes/mês', xlab = 'Ano')
```
     

<div class='alert alert-warning'>
<strong>Exercício 1</strong>


A série abaixo contém a data dos óbitos maternos no Brasil a partir de 2010.

```{r}
url <- 'https://drive.google.com/uc?authuser=0&id=1tYFFT9L2iopKmBDUI3P8qNIRaOnMYj7d&export=download'
```

Crie uma série temporal com o número de óbitos mensal e faça um gráfico. Crie uma janela para colocar no gráfico o período da pandemia de COVID-19.

</div>



